apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-service
  labels:
    app: config-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: config-service
  template:
    metadata:
      labels:
        app: config-service
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8888"
      prometheus.io/path: "/actuator/prometheus"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      containers:
        - name: config-service
          image: config-service:0.0.1-SNAPSHOT
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 5" ]
          ports:
            - containerPort: 9001
          env:
            - name: BPL_JVM_THREAD_COUNT
              value: "50"
            - name: HOME
              value: /home/cnb
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1024Mi"
              cpu: "400m"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cnb-home
              mountPath: /home/cnb
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsGroup: 1000
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: tmp
          emptyDir: { }
        - name: cnb-home
          emptyDir: { }


